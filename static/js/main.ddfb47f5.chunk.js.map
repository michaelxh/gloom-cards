{"version":3,"sources":["components/Card.js","components/Header.js","data.js","App.js","serviceWorker.js","index.js"],"names":["cardTarget","hover","props","monitor","component","dragIndex","getItem","index","hoverIndex","hoverBoundingRect","findDOMNode","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getSourceClientOffset","moveCard","DropTarget","connect","connectDropTarget","dropTarget","DragSource","beginDrag","id","connectDragSource","dragSource","isDragging","character","showToggle","visible","toggleCard","filter","setFilter","className","type","checked","onClick","src","alt","Header","switchCharacter","toggleEditing","editing","cards","classes","value","onChange","event","target","disabled","Object","keys","map","item","i","key","locked","reduce","prev","card","length","brute","total","starting","cragheart","mindthief","scoundrel","spellweaver","tinkerer","sun","order","triangle","cthulhu","circles","eclipse","diviner","demolitionist","voidwarden","hatchet","App","Component","state","save","data","this","window","localStorage","setItem","JSON","stringify","init","Array","e","setState","load","parse","componentDidMount","dragCard","update","$splice","$apply","_e","render","style","fontSize","color","bind","rel","href","Boolean","location","hostname","match","ReactDOM","backend","HTML5Backend","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ddfb47f5.chunk.js","sourcesContent":["import React from 'react'\nimport { findDOMNode } from 'react-dom'\nimport { DragSource, DropTarget } from 'react-dnd'\nimport './Card.css'\n\nconst cardSource = {\n\tbeginDrag: (props) => {\n\t\treturn {\n\t\t\tid: props.id,\n\t\t\tindex: props.index,\n\t\t}\n\t},\n}\n\nconst cardTarget = {\n\thover: (props, monitor, component) => {\n\t\tif (!component) {\n\t\t\treturn null\n\t\t}\n\t\tconst dragIndex = monitor.getItem().index\n\t\tconst hoverIndex = props.index\n\n\t\t// Don't replace items with themselves\n\t\tif (dragIndex === hoverIndex) {\n\t\t\treturn\n\t\t}\n\n\n\t\t// Determine rectangle on screen\n\t\tconst hoverBoundingRect = findDOMNode(component).getBoundingClientRect()\n\n\t\t// Get vertical middle\n\t\tconst hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2\n\n\t\t// Determine mouse position\n\t\tconst clientOffset = monitor.getSourceClientOffset()\n\n\t\t// Get pixels to the top\n\t\tconst hoverClientY = (clientOffset).top - hoverBoundingRect.top\n\n\t\t// Only perform the move when the mouse has crossed half of the items height\n\t\t// When dragging downwards, only move when the cursor is below 50%\n\t\t// When dragging upwards, only move when the cursor is above 50%\n\n\t\t// Dragging downwards\n\t\tif (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n\t\t\treturn\n\t\t}\n\n\t\t// Dragging upwards\n\t\tif (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n\t\t\treturn\n\t\t}\n\n\t\t// Time to actually perform the action\n\t\tprops.moveCard(dragIndex, hoverIndex)\n\n\t\t// Note: we're mutating the monitor item here!\n\t\t// Generally it's better to avoid mutations,\n\t\t// but it's good here for the sake of performance\n\t\t// to avoid expensive index searches.\n\t\tmonitor.getItem().index = hoverIndex\n\t}\n}\n\nfunction collect(connect, monitor) {\n  return {\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging()\n  };\n}\n\nfunction collectTarget(connect, monitor) {\n\treturn { connectDropTarget: connect.dropTarget() }\n}\n\nconst Card = ({\n\tisDragging,\n\tconnectDragSource,\n\tconnectDropTarget,\n\tcharacter,\n\tid,\n\tindex,\n\tshowToggle,\n\tvisible,\n\ttoggleCard,\n\tfilter,\n\tsetFilter\n}) => {\n\tif (!showToggle && !visible) return false;\n  return connectDragSource(connectDropTarget(\n\t\t<div\n\t\t\tclassName={`card ${visible ? '' : 'card--hidden'} ${isDragging ? 'card--dragged' : ''}`}>\n\t\t\t{ showToggle &&\n\t\t\t\t<label className={`cardToggle ${visible ? 'cardToggleChecked' : ''}`}>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tchecked={visible ? true : false}\n\t\t\t\t\t\tonClick={() => toggleCard(index)}\n\t\t\t\t\t\t/>\n\t\t\t\t</label>\n\t\t\t}\n\t\t\t<button className='play-button' onClick={() => setFilter(index, 'played')}>P</button>\n\t\t\t<button className='discard-button' onClick={() => setFilter(index, 'discarded')}>D</button>\n\t\t\t<button className='lost-button' onClick={() => setFilter(index, 'lost')}>L</button>\n\t\t\t<div className={`filter-${filter}`}>\n\t\t\t\t<img className={`${filter && 'opaque'}`} src={`cards/${character}-${id}.jpg`} alt=\"\" />\n\t\t\t</div>\n\t\t</div>\n  ));\n}\nexport default DropTarget(\"card\", cardTarget, collectTarget)(DragSource(\"card\", cardSource, collect)(Card));\n","import React from 'react';\nimport './Header.css'\n\nexport const Header = ({\n  switchCharacter,\n  toggleEditing,\n  editing,\n  cards,\n  classes,\n  character\n}) => (\n  <div>\n    <div className=\"character-panel\">\n      <select\n        className=\"character-picker\"\n        value={character || ''}\n        onChange={(event) => switchCharacter(event.target.value)}\n        >\n          <option value=\"\" disabled>Pick a character</option>\n        {Object.keys(classes).map( (item, i) => (\n          <option value={item} key={i}>{item}{classes[item].locked ? ' (locked)' : ''}</option>\n        ))}\n      </select>\n    </div>\n\n    <div className=\"edit-cards-panel\">\n      {cards.reduce( (prev, card) => {\n        return card.visible ? prev + 1 : prev\n      }, 0)} of {cards.length}\n\n      <span\n        className=\"edit-cards\"\n        onClick={toggleEditing}\n      >\n        {editing ? \"Done\" : \"Edit available cards\"}\n      </span>\n    </div>\n  </div>\n)\n","export const classes = {\n  brute: {\n    total: 29,\n    starting: 13\n  },\n  cragheart: {\n    total: 30,\n    starting: 14\n  },\n  mindthief: {\n    starting: 13,\n    total:29\n  },\n  scoundrel: {\n    total: 28,\n    starting: 12\n  },\n  spellweaver: {\n    total: 27,\n    starting: 11\n  },\n  tinkerer: {\n    total: 31,\n    starting: 15\n  },\n  sun: {\n    locked: true,\n    total: 30,\n    starting: 14\n  },\n  'angry-face': {\n    locked: true,\n    total: 31,\n    starting: 15,\n    order: [22, 4, 8, 30, 21, 17, 6, 13, 11, 27, 1, 28, 25, 29, 12, 7,\n            23, 5, 20, 26, 10, 15, 31, 18, 2, 14, 3, 24, 9, 19, 16]\n  },\n  triangle: {\n    locked: true,\n    total: 29,\n    starting: 13,\n    order: [22, 21, 11, 23, 25, 26, 15, 16, 14, 12, 17, 2, 7, 1, 5, 3,\n            4, 20, 13, 18, 29, 10, 24, 27, 19, 28, 6, 9, 8]\n  },\n  'triple-spears': {\n    locked: true,\n    total: 28,\n    starting: 12,\n    order: [21, 13, 27, 15, 12, 10, 4, 11, 6, 7, 26, 20, 17, 2, 5, 25,\n            28, 9, 19, 24, 3, 16, 23, 18, 14, 8, 22, 1]\n  },\n  cthulhu: {\n    locked: true,\n    total: 30,\n    starting: 14,\n    order: [28, 13, 18, 22, 4, 26, 8, 12, 17, 11, 20, 9, 29, 6, 27, 19,\n            25, 10, 24, 16, 1, 30, 23, 5, 2, 3, 21, 14, 15, 7]\n  },\n  'lightning-bolt': {\n    locked: true,\n    total: 29,\n    starting: 13,\n    order: [22, 18, 26, 10, 15, 2, 8, 9, 16, 4, 29, 17, 20, 21, 5, 25,\n            12, 14, 24, 23, 13, 11, 28, 6, 7, 3, 1, 19, 27]\n  },\n  'music-note': {\n    locked: true,\n    total: 28,\n    starting: 12,\n    order: [16, 7, 21, 27, 2, 25, 24, 20, 11, 23, 28, 15, 22, 4, 9, 6,\n            8, 10, 12, 13, 18, 17, 14, 1, 26, 5, 3, 19]\n  },\n  'saw': {\n    locked: true,\n    total: 31,\n    starting: 15,\n  },\n  'two-mini': {\n    locked: true,\n    total: 30,\n    starting: 14,\n  },\n  circles: {\n    locked: true,\n    total: 29,\n    starting: 12,\n  },\n  eclipse: {\n    locked: true,\n    total: 28,\n    starting: 12,\n  },\n  diviner: {\n    locked: false,\n    total: 28,\n    starting: 12,\n  },\n  demolitionist: {\n    locked: false,\n    total: 27,\n    starting: 12,\n  },\n  'red-guard': {\n    locked: false,\n    total: 28,\n    starting: 13,\n  },\n  voidwarden: {\n    locked: false,\n    total: 29,\n    starting: 14,\n  },\n  hatchet: {\n    locked: false,\n    total: 28,\n    starting: 13,\n  }\n}\n","import React, { Component } from 'react'\nimport './App.css'\nimport update from 'immutability-helper'\nimport Card from './components/Card'\nimport { Header } from './components/Header'\nimport { classes } from './data'\n\nclass App extends Component {\n  state = {\n    character: '',\n    cards: [],\n    editing: false,\n  }\n\n  save(character, data) {\n    if (!character) character = this.state.character\n    if (!data) data = this.state.cards\n    window.localStorage.setItem(character, JSON.stringify(data))\n  }\n\n  init(character) {\n    if (!character) return false\n    const {total, starting, order} = classes[character]\n    //\"starting = total - 16\" instead of putting it in data?\n    const data = [...Array(total)].map( (e, index) =>\n      ({id: order ? order[index] : index+1,\n        visible: starting > index,\n        filter: '' })\n    )\n    this.save(character, data)\n    this.setState({ cards: data })\n  }\n\n  load(character) {\n    const data = window.localStorage.getItem(character)\n    if (data) {\n      this.setState({ cards: JSON.parse(data) })\n    } else {\n      this.init(character)\n    }\n  }\n\n  componentDidMount() {\n    const character = window.localStorage.getItem('character') || null;\n    this.setState({ character })\n    this.load(character)\n  }\n\n  moveCard(dragIndex, hoverIndex) {\n    const { cards } = this.state\n\t\tconst dragCard = cards[dragIndex]\n\n\t\tthis.setState(\n\t\t\tupdate(this.state, {\n\t\t\t\tcards: {\n\t\t\t\t\t$splice: [[dragIndex, 1], [hoverIndex, 0, dragCard]],\n\t\t\t\t},\n\t\t\t}),\n\t\t() => {\n      this.save(this.state.character, this.state.cards)\n    })\n  }\n\n  switchCharacter(character) {\n    this.setState({character: character});\n    this.load(character)\n    window.localStorage.setItem('character', character)\n  }\n\n  toggleCard(index) {\n    this.setState(\n\t\t\tupdate(this.state, {\n\t\t\t\tcards: {\n\t\t\t\t\t[index]: { visible: { $apply: (e) => !e } }\n\t\t\t\t},\n\t\t\t})\n    , this.save)\n  }\n\n  toggleEditing() {\n    this.setState({editing: !this.state.editing})\n  }\n\n  setFilter(index, filter) {\n    this.setState(\n      update(this.state, {\n        cards: {\n          [index]: { filter: { $apply: (_e) => this.state.cards[index].filter !== filter ? filter : ''} }\n        },\n      })\n      , this.save)\n  }\n\n  render() {\n    const { character, cards } = this.state\n    return (\n      <div className=\"App\">\n        <Header\n          switchCharacter={(value) => this.switchCharacter(value)}\n          toggleEditing={() => this.toggleEditing()}\n          editing={this.state.editing}\n          cards={cards}\n          classes={classes}\n          character={character}\n        />\n\n        <div className=\"card-container\">\n\n          {!this.state.character &&\n            <strong style={{fontSize: 44, color: '#ddd'}}>Pick a character</strong>\n          }\n\n          {this.state.character && this.state.cards.length === 0 &&\n            <span>You don't have any cards selected</span>\n          }\n\n          {this.state.cards.map( (item, i) => (\n            <Card\n              key={item.id}\n              character={this.state.character}\n              id={item.id}\n              index={i}\n              moveCard={this.moveCard.bind(this)}\n              showToggle={this.state.editing}\n              visible={item.visible}\n              toggleCard={this.toggleCard.bind(this)}\n              filter={item.filter}\n              setFilter={this.setFilter.bind(this)}\n            />\n          ))}\n        </div>\n        <div className=\"footer\">\n          Got a question, bug, or suggestion? &nbsp;\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/ksokhan/gloom-cards/issues\">Submit a Github issue</a>.\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { DragDropContextProvider } from 'react-dnd';\nimport HTML5Backend from 'react-dnd-html5-backend';\n\nReactDOM.render(\n  <DragDropContextProvider backend={HTML5Backend}>\n    <App />\n  </DragDropContextProvider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}